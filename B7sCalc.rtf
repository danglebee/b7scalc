{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html lang="en">\
<head>\
    <meta charset="UTF-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <title>Revenue Change Calculator</title>\
    <!-- Tailwind CSS CDN -->\
    <script src="https://cdn.tailwindcss.com"></script>\
    <style>\
        /* Custom styles for Inter font */\
        body \{\
            font-family: "Inter", sans-serif;\
        \}\
        /* Hide number input arrows */\
        input[type='number']::-webkit-inner-spin-button,\
        input[type='number']::-webkit-outer-spin-button \{\
            -webkit-appearance: none;\
            margin: 0;\
        \}\
        input[type='number'] \{\
            -moz-appearance: textfield;\
        \}\
        /* Ensure table cells don't wrap too much */\
        .min-w-full th, .min-w-full td \{\
            white-space: nowrap;\
        \}\
        /* Adjust input width for better display in table */\
        .variant-input \{\
            width: 70px; /* Smaller width for number inputs in table */\
            padding: 0.25rem 0.5rem; /* Smaller padding */\
            font-size: 0.875rem; /* sm:text-sm equivalent */\
            text-align: center;\
        \}\
        /* Sticky column for variant name */\
        .sticky-col \{\
            position: sticky;\
            left: 0;\
            background-color: white;\
            z-index: 10;\
            box-shadow: 2px 0 5px rgba(0,0,0,0.1); /* Optional shadow for effect */\
        \}\
        /* Adjust sticky column background for header */\
        .sticky-col-header \{\
            background-color: #f9fafb; /* bg-gray-50 */\
            z-index: 20; /* Higher z-index for header sticky */\
        \}\
    </style>\
</head>\
<body class="bg-gray-100 min-h-screen flex items-center justify-center p-4">\
    <div class="bg-white p-8 rounded-xl shadow-lg w-full max-w-7xl">\
        <h1 class="text-3xl font-bold text-gray-800 mb-6 text-center">Revenue Change Calculator</h1>\
\
        <div id="input-section" class="space-y-6">\
            <!-- Consolidated Table Container -->\
            <div class="overflow-x-auto rounded-xl border border-gray-200 shadow-sm">\
                <table id="main-revenue-table" class="min-w-full divide-y divide-gray-200">\
                    <thead class="bg-gray-50">\
                        <tr id="month-headers-row-1">\
                            <!-- Variant header will span 2 rows -->\
                            <th rowspan="2" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider sticky-col sticky-col-header">Variant</th>\
                            <!-- Month headers will be dynamically added here -->\
                        </tr>\
                        <tr id="month-headers-row-2">\
                            <!-- Sub-headers (LY Price, Prop. Price, Actual Price, Tickets) will be dynamically added here -->\
                        </tr>\
                    </thead>\
                    <tbody class="bg-white divide-y divide-gray-200" id="table-body">\
                        <!-- Variant rows will be dynamically added here -->\
                    </tbody>\
                </table>\
            </div>\
\
            <button id="calculate-btn" class="w-full bg-green-600 text-white py-3 px-6 rounded-xl hover:bg-green-700 transition duration-300 shadow-md">\
                Calculate Revenue Change\
            </button>\
        </div>\
\
        <!-- Results Section -->\
        <div id="results-section" class="mt-8 p-6 bg-gray-50 rounded-xl border border-gray-200 hidden">\
            <h2 class="text-2xl font-semibold text-gray-800 mb-4 text-center">Calculation Results</h2>\
            <div class="space-y-3 text-lg text-gray-700">\
                <p><strong>Total Revenue Last Year:</strong> <span id="last-year-revenue" class="font-bold text-blue-600">$0.00</span></p>\
                <p><strong>Total Proposed Revenue This Year:</strong> <span id="this-year-revenue" class="font-bold text-purple-600">$0.00</span></p>\
                <p><strong>Absolute Revenue Change:</strong> <span id="revenue-change-abs" class="font-bold text-gray-800">$0.00</span></p>\
                <p><strong>Percentage Revenue Change:</strong> <span id="revenue-change-percent" class="font-bold text-gray-800">0.00%</span></p>\
            </div>\
            <div id="error-message" class="mt-4 text-red-600 font-medium text-center hidden"></div>\
        </div>\
    </div>\
\
    <script>\
        // JavaScript for the Revenue Change Calculator\
        document.addEventListener('DOMContentLoaded', () => \{\
            const mainRevenueTable = document.getElementById('main-revenue-table');\
            const monthHeadersRow1 = document.getElementById('month-headers-row-1');\
            const monthHeadersRow2 = document.getElementById('month-headers-row-2');\
            const tableBody = document.getElementById('table-body');\
            const calculateBtn = document.getElementById('calculate-btn');\
            const resultsSection = document.getElementById('results-section');\
            const lastYearRevenueSpan = document.getElementById('last-year-revenue');\
            const thisYearRevenueSpan = document.getElementById('this-year-revenue');\
            const revenueChangeAbsSpan = document.getElementById('revenue-change-abs');\
            const revenueChangePercentSpan = document.getElementById('revenue-change-percent');\
            const errorMessageDiv = document.getElementById('error-message');\
\
            // Array of month names from September to May\
            const monthNames = ['September', 'October', 'November', 'December', 'January', 'February', 'March', 'April', 'May'];\
\
            // Pre-defined list of all variants\
            const allVariants = [\
                'BASKETBALL', 'DODGEBALL', 'FITNESS GAMES', 'HOCKEY', 'NETBALL', 'RUGBY',\
                'TOUCH RUGBY', "WOMEN'S FOOTBALL", 'Camping Upgrade', 'Extra Player',\
                'V.VIP & Deluxe Glamping Package', 'V.VIP & Deluxe Glamping Upgrade',\
                'V.VIP & Glamping Package', 'V.VIP & Glamping Upgrade', 'V.VIP Upgrade',\
                'VIP & Camping Upgrade', 'VIP Upgrade'\
            ];\
\
            // Sample data for previous year, structured by month and then by variant.\
            // This data is parsed directly from your input.\
            const previousYearData = \{\
                'September': [\
                    \{ variant: 'BASKETBALL', lastYearPrice: 65 \}, \{ variant: 'DODGEBALL', lastYearPrice: 68 \},\
                    \{ variant: 'FITNESS GAMES', lastYearPrice: 68 \}, \{ variant: 'HOCKEY', lastYearPrice: 65 \},\
                    \{ variant: 'NETBALL', lastYearPrice: 62 \}, \{ variant: 'RUGBY', lastYearPrice: 61 \},\
                    \{ variant: 'TOUCH RUGBY', lastYearPrice: 71 \}, \{ variant: "WOMEN'S FOOTBALL", lastYearPrice: 0 \},\
                    \{ variant: 'Camping Upgrade', lastYearPrice: 102 \}, \{ variant: 'Extra Player', lastYearPrice: 69 \},\
                    \{ variant: 'V.VIP & Deluxe Glamping Package', lastYearPrice: 0 \}, \{ variant: 'V.VIP & Deluxe Glamping Upgrade', lastYearPrice: 0 \},\
                    \{ variant: 'V.VIP & Glamping Package', lastYearPrice: 250 \}, \{ variant: 'V.VIP & Glamping Upgrade', lastYearPrice: 252 \},\
                    \{ variant: 'V.VIP Upgrade', lastYearPrice: 28 \}, \{ variant: 'VIP & Camping Upgrade', lastYearPrice: 127 \},\
                    \{ variant: 'VIP Upgrade', lastYearPrice: 31 \}\
                ],\
                'October': [\
                    \{ variant: 'BASKETBALL', lastYearPrice: 70 \}, \{ variant: 'DODGEBALL', lastYearPrice: 70 \},\
                    \{ variant: 'FITNESS GAMES', lastYearPrice: 70 \}, \{ variant: 'HOCKEY', lastYearPrice: 70 \},\
                    \{ variant: 'NETBALL', lastYearPrice: 67 \}, \{ variant: 'RUGBY', lastYearPrice: 56 \},\
                    \{ variant: 'TOUCH RUGBY', lastYearPrice: 0 \}, \{ variant: "WOMEN'S FOOTBALL", lastYearPrice: 50 \},\
                    \{ variant: 'Camping Upgrade', lastYearPrice: 102 \}, \{ variant: 'Extra Player', lastYearPrice: 70 \},\
                    \{ variant: 'V.VIP & Deluxe Glamping Package', lastYearPrice: 0 \}, \{ variant: 'V.VIP & Deluxe Glamping Upgrade', lastYearPrice: 0 \},\
                    \{ variant: 'V.VIP & Glamping Package', lastYearPrice: 260 \}, \{ variant: 'V.VIP & Glamping Upgrade', lastYearPrice: 263 \},\
                    \{ variant: 'V.VIP Upgrade', lastYearPrice: 44 \}, \{ variant: 'VIP & Camping Upgrade', lastYearPrice: 111 \},\
                    \{ variant: 'VIP Upgrade', lastYearPrice: 40 \}\
                ],\
                'November': [\
                    \{ variant: 'BASKETBALL', lastYearPrice: 85 \}, \{ variant: 'DODGEBALL', lastYearPrice: 70 \},\
                    \{ variant: 'FITNESS GAMES', lastYearPrice: 70 \}, \{ variant: 'HOCKEY', lastYearPrice: 0 \},\
                    \{ variant: 'NETBALL', lastYearPrice: 85 \}, \{ variant: 'RUGBY', lastYearPrice: 62 \},\
                    \{ variant: 'TOUCH RUGBY', lastYearPrice: 0 \}, \{ variant: "WOMEN'S FOOTBALL", lastYearPrice: 75 \},\
                    \{ variant: 'Camping Upgrade', lastYearPrice: 79 \}, \{ variant: 'Extra Player', lastYearPrice: 36 \},\
                    \{ variant: 'V.VIP & Deluxe Glamping Package', lastYearPrice: 0 \}, \{ variant: 'V.VIP & Deluxe Glamping Upgrade', lastYearPrice: 0 \},\
                    \{ variant: 'V.VIP & Glamping Package', lastYearPrice: 275 \}, \{ variant: 'V.VIP & Glamping Upgrade', lastYearPrice: 275 \},\
                    \{ variant: 'V.VIP Upgrade', lastYearPrice: 70 \}, \{ variant: 'VIP & Camping Upgrade', lastYearPrice: 65 \},\
                    \{ variant: 'VIP Upgrade', lastYearPrice: 40 \}\
                ],\
                'December': [\
                    \{ variant: 'BASKETBALL', lastYearPrice: 85 \}, \{ variant: 'DODGEBALL', lastYearPrice: 62 \},\
                    \{ variant: 'FITNESS GAMES', lastYearPrice: 85 \}, \{ variant: 'HOCKEY', lastYearPrice: 85 \},\
                    \{ variant: 'NETBALL', lastYearPrice: 82 \}, \{ variant: 'RUGBY', lastYearPrice: 82 \},\
                    \{ variant: 'TOUCH RUGBY', lastYearPrice: 85 \}, \{ variant: "WOMEN'S FOOTBALL", lastYearPrice: 85 \},\
                    \{ variant: 'Camping Upgrade', lastYearPrice: 77 \}, \{ variant: 'Extra Player', lastYearPrice: 80 \},\
                    \{ variant: 'V.VIP & Deluxe Glamping Package', lastYearPrice: 0 \}, \{ variant: 'V.VIP & Deluxe Glamping Upgrade', lastYearPrice: 0 \},\
                    \{ variant: 'V.VIP & Glamping Package', lastYearPrice: 275 \}, \{ variant: 'V.VIP & Glamping Upgrade', lastYearPrice: 275 \},\
                    \{ variant: 'V.VIP Upgrade', lastYearPrice: 54 \}, \{ variant: 'VIP & Camping Upgrade', lastYearPrice: 91 \},\
                    \{ variant: 'VIP Upgrade', lastYearPrice: 40 \}\
                ],\
                'January': [\
                    \{ variant: 'BASKETBALL', lastYearPrice: 0 \}, \{ variant: 'DODGEBALL', lastYearPrice: 79 \},\
                    \{ variant: 'FITNESS GAMES', lastYearPrice: 79 \}, \{ variant: 'HOCKEY', lastYearPrice: 96 \},\
                    \{ variant: 'NETBALL', lastYearPrice: 93 \}, \{ variant: 'RUGBY', lastYearPrice: 72 \},\
                    \{ variant: 'TOUCH RUGBY', lastYearPrice: 0 \}, \{ variant: "WOMEN'S FOOTBALL", lastYearPrice: 95 \},\
                    \{ variant: 'Camping Upgrade', lastYearPrice: 98 \}, \{ variant: 'Extra Player', lastYearPrice: 95 \},\
                    \{ variant: 'V.VIP & Deluxe Glamping Package', lastYearPrice: 350 \}, \{ variant: 'V.VIP & Deluxe Glamping Upgrade', lastYearPrice: 0 \},\
                    \{ variant: 'V.VIP & Glamping Package', lastYearPrice: 266 \}, \{ variant: 'V.VIP & Glamping Upgrade', lastYearPrice: 293 \},\
                    \{ variant: 'V.VIP Upgrade', lastYearPrice: 70 \}, \{ variant: 'VIP & Camping Upgrade', lastYearPrice: 123 \},\
                    \{ variant: 'VIP Upgrade', lastYearPrice: 0 \}\
                ],\
                'February': [\
                    \{ variant: 'BASKETBALL', lastYearPrice: 99 \}, \{ variant: 'DODGEBALL', lastYearPrice: 66 \},\
                    \{ variant: 'FITNESS GAMES', lastYearPrice: 71 \}, \{ variant: 'HOCKEY', lastYearPrice: 83 \},\
                    \{ variant: 'NETBALL', lastYearPrice: 99 \}, \{ variant: 'RUGBY', lastYearPrice: 69 \},\
                    \{ variant: 'TOUCH RUGBY', lastYearPrice: 65 \}, \{ variant: "WOMEN'S FOOTBALL", lastYearPrice: 84 \},\
                    \{ variant: 'Camping Upgrade', lastYearPrice: 106 \}, \{ variant: 'Extra Player', lastYearPrice: 87 \},\
                    \{ variant: 'V.VIP & Deluxe Glamping Package', lastYearPrice: 0 \}, \{ variant: 'V.VIP & Deluxe Glamping Upgrade', lastYearPrice: 0 \},\
                    \{ variant: 'V.VIP & Glamping Package', lastYearPrice: 246 \}, \{ variant: 'V.VIP & Glamping Upgrade', lastYearPrice: 269 \},\
                    \{ variant: 'V.VIP Upgrade', lastYearPrice: 49 \}, \{ variant: 'VIP & Camping Upgrade', lastYearPrice: 101 \},\
                    \{ variant: 'VIP Upgrade', lastYearPrice: 43 \}\
                ],\
                'March': [\
                    \{ variant: 'BASKETBALL', lastYearPrice: 99 \}, \{ variant: 'DODGEBALL', lastYearPrice: 99 \},\
                    \{ variant: 'FITNESS GAMES', lastYearPrice: 50 \}, \{ variant: 'HOCKEY', lastYearPrice: 0 \},\
                    \{ variant: 'NETBALL', lastYearPrice: 61 \}, \{ variant: 'RUGBY', lastYearPrice: 77 \},\
                    \{ variant: 'TOUCH RUGBY', lastYearPrice: 0 \}, \{ variant: "WOMEN'S FOOTBALL", lastYearPrice: 0 \},\
                    \{ variant: 'Camping Upgrade', lastYearPrice: 123 \}, \{ variant: 'Extra Player', lastYearPrice: 95 \},\
                    \{ variant: 'V.VIP & Deluxe Glamping Package', lastYearPrice: 0 \}, \{ variant: 'V.VIP & Deluxe Glamping Upgrade', lastYearPrice: 360 \},\
                    \{ variant: 'V.VIP & Glamping Package', lastYearPrice: 0 \}, \{ variant: 'V.VIP & Glamping Upgrade', lastYearPrice: 268 \},\
                    \{ variant: 'V.VIP Upgrade', lastYearPrice: 64 \}, \{ variant: 'VIP & Camping Upgrade', lastYearPrice: 155 \},\
                    \{ variant: 'VIP Upgrade', lastYearPrice: 21 \}\
                ],\
                'April': [\
                    \{ variant: 'BASKETBALL', lastYearPrice: 80 \}, \{ variant: 'DODGEBALL', lastYearPrice: 99 \},\
                    \{ variant: 'FITNESS GAMES', lastYearPrice: 81 \}, \{ variant: 'HOCKEY', lastYearPrice: 0 \},\
                    \{ variant: 'NETBALL', lastYearPrice: 58 \}, \{ variant: 'RUGBY', lastYearPrice: 30 \},\
                    \{ variant: 'TOUCH RUGBY', lastYearPrice: 0 \}, \{ variant: "WOMEN'S FOOTBALL", lastYearPrice: 0 \},\
                    \{ variant: 'Camping Upgrade', lastYearPrice: 74 \}, \{ variant: 'Extra Player', lastYearPrice: 90 \},\
                    \{ variant: 'V.VIP & Deluxe Glamping Package', lastYearPrice: 0 \}, \{ variant: 'V.VIP & Deluxe Glamping Upgrade', lastYearPrice: 360 \},\
                    \{ variant: 'V.VIP & Glamping Package', lastYearPrice: 0 \}, \{ variant: 'V.VIP & Glamping Upgrade', lastYearPrice: 256 \},\
                    \{ variant: 'V.VIP Upgrade', lastYearPrice: 33 \}, \{ variant: 'VIP & Camping Upgrade', lastYearPrice: 138 \},\
                    \{ variant: 'VIP Upgrade', lastYearPrice: 41 \}\
                ],\
                'May': [\
                    \{ variant: 'BASKETBALL', lastYearPrice: 0 \}, \{ variant: 'DODGEBALL', lastYearPrice: 0 \},\
                    \{ variant: 'FITNESS GAMES', lastYearPrice: 65 \}, \{ variant: 'HOCKEY', lastYearPrice: 0 \},\
                    \{ variant: 'NETBALL', lastYearPrice: 0 \}, \{ variant: 'RUGBY', lastYearPrice: 0 \},\
                    \{ variant: 'TOUCH RUGBY', lastYearPrice: 0 \}, \{ variant: "WOMEN'S FOOTBALL", lastYearPrice: 0 \},\
                    \{ variant: 'Camping Upgrade', lastYearPrice: 138 \}, \{ variant: 'Extra Player', lastYearPrice: 82 \},\
                    \{ variant: 'V.VIP & Deluxe Glamping Package', lastYearPrice: 0 \}, \{ variant: 'V.VIP & Deluxe Glamping Upgrade', lastYearPrice: 360 \},\
                    \{ variant: 'V.VIP & Glamping Package', lastYearPrice: 0 \}, \{ variant: 'V.VIP & Glamping Upgrade', lastYearPrice: 300 \},\
                    \{ variant: 'V.VIP Upgrade', lastYearPrice: 51 \}, \{ variant: 'VIP & Camping Upgrade', lastYearPrice: 190 \},\
                    \{ variant: 'VIP Upgrade', lastYearPrice: 14 \}\
                ]\
            \};\
\
            /**\
             * Initializes the main revenue table with headers and variant rows.\
             */\
            const initializeTable = () => \{\
                // Clear existing content\
                monthHeadersRow1.innerHTML = `<th rowspan="2" class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider sticky-col sticky-col-header">Variant</th>`;\
                monthHeadersRow2.innerHTML = ``; // This row starts empty after the variant header is set in row1\
                tableBody.innerHTML = '';\
\
                // Add month headers (first row)\
                monthNames.forEach(month => \{\
                    const th = document.createElement('th');\
                    th.setAttribute('colspan', '4'); // Each month has 4 sub-columns\
                    th.className = 'px-3 py-2 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border-l border-gray-200';\
                    th.textContent = month;\
                    monthHeadersRow1.appendChild(th);\
\
                    // Add sub-headers (second row)\
                    const subHeaders = ['LY Price', 'Prop. Price', 'Act. Price', 'Tickets'];\
                    subHeaders.forEach(subHeader => \{\
                        const subTh = document.createElement('th');\
                        subTh.className = 'px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider';\
                        subTh.textContent = subHeader;\
                        monthHeadersRow2.appendChild(subTh);\
                    \});\
                \});\
\
                // Populate table body with variant rows\
                allVariants.forEach(variantName => \{\
                    const row = document.createElement('tr');\
                    row.className = 'hover:bg-gray-50';\
\
                    // Variant name cell (sticky)\
                    const variantNameCell = document.createElement('td');\
                    variantNameCell.className = 'px-3 py-2 whitespace-nowrap text-sm font-medium text-gray-900 sticky-col';\
                    variantNameCell.textContent = variantName;\
                    row.appendChild(variantNameCell);\
\
                    // Add cells for each month\
                    monthNames.forEach(month => \{\
                        const variantDataForMonth = previousYearData[month] ? previousYearData[month].find(v => v.variant === variantName) : null;\
                        const lastYearPrice = variantDataForMonth ? variantDataForMonth.lastYearPrice : 0;\
\
                        // Last Year Price (readonly)\
                        const lyPriceCell = document.createElement('td');\
                        lyPriceCell.className = 'px-3 py-2 whitespace-nowrap';\
                        lyPriceCell.innerHTML = `<input type="number" class="variant-input ly-price-input" value="$\{lastYearPrice.toFixed(2)\}" readonly min="0" step="0.01" data-variant="$\{variantName\}" data-month="$\{month\}">`;\
                        row.appendChild(lyPriceCell);\
\
                        // Proposed Price This Year\
                        const propPriceCell = document.createElement('td');\
                        propPriceCell.className = 'px-3 py-2 whitespace-nowrap';\
                        propPriceCell.innerHTML = `<input type="number" class="variant-input prop-price-input" placeholder="e.g., $\{lastYearPrice > 0 ? (lastYearPrice * 1.1).toFixed(2) : '0.00'\}" min="0" step="0.01" data-variant="$\{variantName\}" data-month="$\{month\}">`;\
                        row.appendChild(propPriceCell);\
\
                        // Actual Price This Year\
                        const actPriceCell = document.createElement('td');\
                        actPriceCell.className = 'px-3 py-2 whitespace-nowrap';\
                        actPriceCell.innerHTML = `<input type="number" class="variant-input actual-price-input" placeholder="e.g., $\{lastYearPrice > 0 ? (lastYearPrice * 1.05).toFixed(2) : '0.00'\}" min="0" step="0.01" data-variant="$\{variantName\}" data-month="$\{month\}">`;\
                        row.appendChild(actPriceCell);\
\
                        // Tickets Sold\
                        const ticketsSoldCell = document.createElement('td');\
                        ticketsSoldCell.className = 'px-3 py-2 whitespace-nowrap';\
                        ticketsSoldCell.innerHTML = `<input type="number" class="variant-input tickets-sold-input" placeholder="e.g., 0" min="0" step="1" data-variant="$\{variantName\}" data-month="$\{month\}">`;\
                        row.appendChild(ticketsSoldCell);\
                    \});\
                    tableBody.appendChild(row);\
                \});\
            \};\
\
            /**\
             * Calculates and displays the revenue change.\
             */\
            const calculateRevenueChange = () => \{\
                let totalLastYearRevenue = 0;\
                let totalThisYearRevenue = 0;\
                let hasError = false;\
                errorMessageDiv.classList.add('hidden'); // Hide previous errors\
\
                // Iterate over each variant row\
                allVariants.forEach(variantName => \{\
                    // Find the row for this variant\
                    const row = tableBody.querySelector(`tr:has(td.sticky-col[data-variant="$\{variantName\}"])`); // This selector might need refinement if data-variant is not on sticky-col\
\
                    // A more robust way to find the row:\
                    let currentRow = null;\
                    const allRows = tableBody.querySelectorAll('tr');\
                    for (const r of allRows) \{\
                        if (r.querySelector('td.sticky-col').textContent === variantName) \{\
                            currentRow = r;\
                            break;\
                        \}\
                    \}\
\
                    if (!currentRow) return; // Should not happen if allVariants match rows\
\
                    // Iterate over each month's inputs within this variant's row\
                    monthNames.forEach(month => \{\
                        // Select inputs for the current variant and month\
                        const lyPriceInput = currentRow.querySelector(`.ly-price-input[data-variant="$\{variantName\}"][data-month="$\{month\}"]`);\
                        const actualPriceInput = currentRow.querySelector(`.actual-price-input[data-variant="$\{variantName\}"][data-month="$\{month\}"]`);\
                        const ticketsSoldInput = currentRow.querySelector(`.tickets-sold-input[data-variant="$\{variantName\}"][data-month="$\{month\}"]`);\
\
                        // Check if inputs exist (they should if table is correctly rendered)\
                        if (!lyPriceInput || !actualPriceInput || !ticketsSoldInput) \{\
                            console.error(`Missing inputs for $\{variantName\} in $\{month\}`);\
                            hasError = true;\
                            errorMessageDiv.textContent = `Internal error: Missing data for $\{variantName\} in $\{month\}.`;\
                            errorMessageDiv.classList.remove('hidden');\
                            return;\
                        \}\
\
                        const lastYearPrice = parseFloat(lyPriceInput.value);\
                        const actualPriceThisYear = parseFloat(actualPriceInput.value);\
                        const ticketsSold = parseInt(ticketsSoldInput.value);\
\
                        // Validate inputs\
                        if (isNaN(lastYearPrice) || isNaN(actualPriceThisYear) || isNaN(ticketsSold) ||\
                            lastYearPrice < 0 || actualPriceThisYear < 0 || ticketsSold < 0) \{\
                            hasError = true;\
                            errorMessageDiv.textContent = `Please enter valid positive numbers for all fields for "$\{variantName\}" in "$\{month\}".`;\
                            errorMessageDiv.classList.remove('hidden');\
                            return; // Exit inner loop if error found\
                        \}\
\
                        totalLastYearRevenue += lastYearPrice * ticketsSold;\
                        totalThisYearRevenue += actualPriceThisYear * ticketsSold;\
                    \});\
\
                    if (hasError) \{\
                        return; // Exit outer loop if error found\
                    \}\
                \});\
\
                if (hasError) \{\
                    resultsSection.classList.add('hidden');\
                    return; // Stop if there was an input error\
                \}\
\
                const absoluteChange = totalThisYearRevenue - totalLastYearRevenue;\
                let percentageChange = 0;\
                if (totalLastYearRevenue !== 0) \{\
                    percentageChange = (absoluteChange / totalLastYearRevenue) * 100;\
                \} else if (totalThisYearRevenue > 0) \{\
                    percentageChange = Infinity; // If last year was 0 but this year is > 0, it's an infinite increase\
                \}\
\
                // Display results\
                lastYearRevenueSpan.textContent = `$$\{totalLastYearRevenue.toFixed(2)\}`;\
                thisYearRevenueSpan.textContent = `$$\{totalThisYearRevenue.toFixed(2)\}`;\
                revenueChangeAbsSpan.textContent = `$$\{absoluteChange.toFixed(2)\}`;\
\
                if (percentageChange === Infinity) \{\
                    revenueChangePercentSpan.textContent = 'Infinite Increase';\
                    revenueChangePercentSpan.className = 'font-bold text-green-600'; // Highlight infinite increase\
                \} else \{\
                    revenueChangePercentSpan.textContent = `$\{percentageChange.toFixed(2)\}%`;\
                    // Apply color based on change\
                    if (percentageChange > 0) \{\
                        revenueChangePercentSpan.className = 'font-bold text-green-600';\
                    \} else if (percentageChange < 0) \{\
                        revenueChangePercentSpan.className = 'font-bold text-red-600';\
                    \} else \{\
                        revenueChangePercentSpan.className = 'font-bold text-gray-800';\
                    \}\
                \}\
\
                resultsSection.classList.remove('hidden'); // Show results section\
            \};\
\
            // Event Listeners\
            calculateBtn.addEventListener('click', calculateRevenueChange);\
\
            // Initialize the table on page load\
            initializeTable();\
        \});\
    </script>\
</body>\
</html>\
}